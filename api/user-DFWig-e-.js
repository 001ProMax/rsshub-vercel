import{__dirname as e,init_esm_shims as t}from"./esm-shims-CtP6w_ML.js";import"./config-DYqAlsU3.js";import"./logger-BlLSmUdl.js";import"./proxy-kot7LoOQ.js";import{ofetch_default as n}from"./ofetch-CWQqZcqz.js";import{cache_default as r}from"./cache-CvppK6AM.js";import{art as i}from"./render-DE4LRFBD.js";import{parseDate as a}from"./parse-date-DHsdom8D.js";import{ViewType as o}from"./types-Bi82qguM.js";import{puppeteer_default as s}from"./puppeteer-DQCLzTv0.js";import c from"node:path";import{load as l}from"cheerio";import u from"sanitize-html";const d=async(e,t)=>{let n,r=await t.newPage();return await r.setRequestInterception(!0),r.on(`request`,e=>{e.resourceType()===`document`?e.continue():e.abort()}),r.on(`response`,async e=>{n=await(e.request().url().includes(`/api/posts`)?e.json():e.text())}),await r.goto(e,{waitUntil:`domcontentloaded`}),await r.close(),n};t();const f={path:`/user/:id/:type?`,categories:[`social-media`,`popular`],example:`/picnob/user/xlisa_olivex`,parameters:{id:`Instagram id`,type:`Type of profile page (profile or tagged)`},features:{requireConfig:!1,requirePuppeteer:!0,antiCrawler:!0,supportBT:!1,supportPodcast:!1,supportScihub:!1},radar:[{source:[`pixwox.com/profile/:id`],target:`/user/:id`},{source:[`pixwox.com/profile/:id/tagged`],target:`/user/:id/tagged`}],name:`User Profile - Picnob`,maintainers:[`TonyRL`,`micheal-death`,`AiraNadih`],handler:p,view:o.Pictures};async function p(t){let o=`https://www.pixwox.com`,f=t.req.param(`id`),p=t.req.param(`type`)??`profile`,m=`${o}/profile/${f}/${p===`tagged`?`tagged/`:``}`,h=await s();try{let t=await r.tryGet(`picnob:user:${f}`,async()=>{let e,t=!1;try{let t=await n(m,{headers:{accept:`text/html`,referer:`https://www.google.com/`}});e=t}catch{e=await d(m,h),t=!0}let r=l(e),i=r(`h1.fullname`).text(),a=r(`input[name=userid]`).attr(`value`);if(!a)throw Error(`Failed to get user ID`);return{name:i,userId:a,description:r(`.info .sum`).text(),image:r(`.ava .pic img`).attr(`src`),usePuppeteer:t}}),s,g;p===`tagged`?(s=`${t.name} (@${f}) tagged posts - Picnob`,g=`tagged`):(s=`${t.name} (@${f}) public posts - Picnob`,g=`posts`);let _=`${o}/api/${g}`,v;try{if(t.usePuppeteer)v=await d(`${_}?userid=${t.userId}`,h),v=typeof v==`string`?JSON.parse(v):v;else{let e=await n(_,{headers:{accept:`application/json`},query:{userid:t.userId}});v=typeof e==`string`?JSON.parse(e):e}}catch{v=await d(`${_}?userid=${t.userId}`,h),v=typeof v==`string`?JSON.parse(v):v}let y=v?.posts;if(!y?.items?.length)throw Error(`No posts found`);p===`tagged`&&(y.items=y.items.map((e,t)=>{let n=v.tagged.items[t]||{};return{...n,...e}}));let b=await Promise.all(y.items.map(async s=>{let{shortcode:f,sum:p,sum_pure:m,type:g,time:_}=s,v=`${o}/post/${f}/`;return g===`img_multi`&&(s.images=await r.tryGet(v,async()=>{let e;if(t.usePuppeteer)e=await d(v,h);else{let t=await n(v);e=t}let r=l(e);return[...new Set(r(`.post_slide a`).toArray().map(e=>(e=r(e),{ori:e.attr(`href`),url:e.find(`img`).attr(`data-src`),isVideo:!!e.find(`.icon_play`).length})))]})),{title:u(p.split(`
`)[0],{allowedTags:[],allowedAttributes:{}})||m,description:i(c.join(e,`templates/desc-4f94a25a.art`),{item:{...s,sum:p.replaceAll(`
`,`<br>`)}}),link:v,guid:f,pubDate:a(_,`X`)}}));return{title:s,description:t.description,link:m,image:t.image,item:b}}catch(e){throw await h.close(),e}finally{await h.close()}}export{f as route};