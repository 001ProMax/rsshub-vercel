import"./esm-shims-DtWyl6zt.js";import{config as e}from"./config-CT-9jq-j.js";import"./logger-BsClR5PH.js";import"./dist-BrnquCU2.js";import"./helpers-DzX-lcQO.js";import"./cache-DNP0KCHb.js";import"./parse-date-Bgabdhlb.js";import"./ofetch-Of9UBhau.js";import{got_default as t}from"./got-Cw3q2eEq.js";import{ViewType as n}from"./types-A5bA50Mg.js";import{ConfigNotFoundError as r}from"./config-not-found-2m672-Jl.js";import{utils_default as i}from"./utils-CKnyFkKl.js";const a={path:`/tag/:site/:hashtag/:only_media?`,categories:[`social-media`],view:n.SocialMedia,example:`/mastodon/tag/mastodon.social/gochisou/true`,parameters:{site:"instance address, only domain, no `http://` or `https://` protocol header",hashtag:`Hashtag you want to subscribe to (without the # symbol)`,only_media:{description:`whether only display media content, default to false, any value to true`,options:[{value:`true`,label:`true`},{value:`false`,label:`false`}],default:`false`}},name:`Hashtag timeline`,maintainers:[`yuikisaito`],handler:o};async function o(n){let{site:a,hashtag:o}=n.req.param(),s=n.req.param(`only_media`)===`true`?`true`:`false`;if(!e.feature.allow_user_supply_unsafe_domain&&!i.allowSiteList.includes(a))throw new r(`This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);let c=`http://${a}/api/v1/timelines/tag/${o}?only_media=${s}`,l=await t.get(c,{headers:i.apiHeaders(a)}),u=l.data;return{title:`#${o} ${s===`true`?` Media`:``} Timeline on ${a}`,link:`https://${a}`,item:i.parseStatuses(u)}}export{a as route};